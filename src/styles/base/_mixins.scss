@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
  @font-face {
    font-family: $font-family;
    src: url('#{$file-path}.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
    font-weight: $weight;
    font-style: $style;
    font-stretch: none;
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }

  &:-moz-placeholder { /* Firefox 18- */
    @content;
  }

  &::-moz-placeholder {  /* Firefox 19+ */
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }
}

/*
  (TEXT) PARAMS
  =================
  1. Namespace
  2. Intensity
  3. Text color
  4. Background color (flat)
  5. Highlight #1 color
  6. Highlight #2 color
  7. Width (px)
  8. Height (px)

  Stolen gratuitously from https://css-tricks.com/glitch-effect-text-images-svg/
*/

@mixin textGlitch($name, $intensity, $textcolor, $background, $highlightcolor1, $highlightcolor2, $width, $height, $timing1: 3s, $timing2: 4s) {

  color: $textcolor;
  position: relative;
  $steps: $intensity;

  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          #{percentage($i * (1/$steps))} {
            clip: rect(
              random($height)+px,
              $width+px,
              random($height)+px,
              0
            );
          }
        }
      }
    }
  }

  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background: $background;
    clip: rect(0, 0, 0, 0);
  }

  &::after {
    left: 2px;
    text-shadow: -1px 0 $highlightcolor1;
    animation: #{$name}-anim-1 $timing1 infinite linear alternate-reverse;
  }

  &::before {
    left: -2px;
    text-shadow: 1px 0 $highlightcolor2;
    animation: #{$name}-anim-2 $timing2 infinite linear alternate-reverse;
  }

}

@mixin transition($transitions) {
  -webkit-transition: $transitions;
  -moz-transition: $transitions;
  -ms-transition: $transitions;
  -o-transition: $transitions;
  transition: $transitions;
}

/* this mixin makes possible to add transition to a specific vendor, example: */
/* -webkit-transition: -webkit-transform 0.5s linear; */
@mixin transitionPrefix($property, $values) {
  -webkit-transition: -webkit-#{$property} #{$values};
  -moz-transition: -moz-#{$property} #{$values};
  -ms-transition: -ms-#{$property} #{$values};
  -o-transition: -o-#{$property} #{$values};
  transition: #{$property} #{$values};
}

@mixin backgroundGradient($from, $to) {
  background: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, $from), color-stop(100%,  $to));
  background: -webkit-linear-gradient($from, $to);
  background: -moz-linear-gradient($from, $to);
  background: -o-linear-gradient($from, $to);
  background: linear-gradient($from, $to);
}

@mixin transform ($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}
}

@mixin animation($animations) {
  -webkit-animation: $animations;
  -moz-animation: $animations;
  -o-animation: $animations;
  -ms-animation: $animations;
  animation: $animations;
}

@mixin animationDelay($value) {
  -webkit-animation-delay: $value;
  -moz-animation-delay: $value;
  -o-animation-delay: $value;
  -ms-animation-delay: $value;
  animation-delay: $value;
}

@mixin keyFrame($name) {
  @-webkit-keyframes $name {
    @content
  }
  @-moz-keyframes $name {
    @content
  }
  @-o-keyframes $name {
    @content
  }
  @keyframes $name {
    @content
  }
}
